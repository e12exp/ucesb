#!/usr/bin/perl

use strict;
use warnings;

print <<"EndOfText";

/*************************************************************
 *
 * This file is generated by $0 - do not edit.
 */

EndOfText

my %varnames = ();

my $branch = 0;

while(my $line = <>)
{
    chomp $line;
    if ($line =~ /^(\d)(\d)(\d)20000$/)
    {
	my $sam = $1;
	my $gtb = $2;
	my $sid = $3;

	my $varname = "_sst_ped_add_branch${branch}sam${sam}gtb${gtb}sid${sid}";
	$varnames{"[$branch][$sam][$gtb][$sid]"} = $varname;

	print ("uint16 ${varname}[1024] = {\n");
	for (my $i = 0; $i < 1024; $i += 16) {
	    my $valline = <>;

	    my @values = split ' ',$valline;

	    print ("  ");

	    for (my $j = 0; $j < 16; $j ++) {
		my $index = $i + $j;
		my $value = hex($values[$j]) >> 3;
		print "$value,";
	    }
	    print ("\n");
	}
	print ("};\n\n");
    }
    if ($line =~ /branch\s*(\d+)/)
    {
	$branch = $1;
	
    }
}

print <<"EndOfText";

\#include <memory.h>

uint16 *_sst_ped_add[4][16][2][16];

void init_sst_ped_add()
{
  memset(_sst_ped_add,0,sizeof(_sst_ped_add));

EndOfText

foreach my $key (sort keys %varnames) {
    my $varname = $varnames{$key};
    print ("  _sst_ped_add$key = $varname;\n");
}

print ("}\n");
